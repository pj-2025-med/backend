plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'       // 안정 릴리스 권장
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'med'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // --- Oracle BOM: 아래 Oracle 관련 라이브러리들의 호환 버전을 자동으로 맞춰줌 ---
    implementation platform('com.oracle.database.jdbc:ojdbc-bom:23.9.0.25.07')

    // MyBatis / Spring
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.5'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Swagger (springdoc)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    // --- Oracle JDBC & Wallet/mTLS ---
    runtimeOnly 'com.oracle.database.jdbc:ojdbc11'     // 드라이버
    implementation 'com.oracle.database.jdbc:ucp11'    // (선택) 연결풀
    implementation 'com.oracle.database.security:oraclepki'
    implementation 'com.oracle.database.security:osdt_core'
    implementation 'com.oracle.database.security:osdt_cert'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.apache.commons:commons-lang3:3.18.0'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
    annotationProcessor 'org.projectlombok:lombok'

    // Devtools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // 토큰에 저장된 JSON 처리
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // 테스트
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// JUnit Platform
tasks.named('test') {
    useJUnitPlatform()
}

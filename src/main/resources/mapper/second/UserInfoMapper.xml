<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.med.mapper.second.UserInfoMapper">

    <resultMap id="UserInfoMap" type="com.example.med.dto.UserInfo">
        <id     column="user_id"    property="userId"/>
        <result column="password"   property="password"/>
        <result column="user_name"  property="userName"/>
        <result column="email"      property="email"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <select id="findById" resultMap="UserInfoMap" parameterType="string">
        SELECT user_id, password, user_name, email, created_at, updated_at
        FROM USER_INFO
        WHERE user_id = #{userId}
    </select>

    <insert id="insert" parameterType="com.example.med.dto.UserInfo">
        INSERT INTO USER_INFO (user_id, password, user_name, email, created_at, updated_at)
        VALUES (#{userId}, #{password}, #{userName}, #{email}, SYSTIMESTAMP, SYSTIMESTAMP)
    </insert>

    <insert id="updateUserInfo" parameterType="com.example.med.dto.UserInfo">
        UPDATE USER_INFO
        SET password = #{password}, user_name = #{userName}, email = #{email}, updated_at = SYSTIMESTAMP
        WHERE user_id = #{userId}
    </insert>

    <select id="findByUserInfo" parameterType="string" resultType="com.example.med.dto.UserInfoRespondDto">
        SELECT user_id AS userId, user_name AS userName, email AS email, created_at AS createdAt, updated_at AS updatedAt
        FROM USER_INFO
        WHERE user_id = #{userId}
    </select>

    <select id="selectByUserId" resultMap="UserInfoMap">
        SELECT user_id, password, user_name, email, created_at, updated_at
        FROM USER_INFO
        WHERE user_id = #{userId}
    </select>

    <select id="countByUserId" parameterType="string" resultType="int">
        SELECT COUNT(*) FROM USER_INFO WHERE user_id = #{userId}
    </select>

    <select id="countByEmail" parameterType="string" resultType="int">
        SELECT COUNT(*) FROM USER_INFO WHERE email = #{email}
    </select>

    <resultMap id="UserResultMap" type="com.example.med.dto.UserDto">
        <id     property="userId"      column="USER_ID"/>
        <result property="userName"    column="USER_NAME"/>
        <result property="email"       column="EMAIL"/>
        <result property="createdAt"   column="CREATED_AT"/>
        <result property="updatedAt"   column="UPDATED_AT"/>
        <result property="createdYear" column="CREATED_YEAR"/>
    </resultMap>

    <!-- 전체 조회: 생성년도도 함께 반환 -->
    <select id="findAll" resultMap="UserResultMap">
        SELECT
            USER_ID,
            USER_NAME,
            EMAIL,
            CREATED_AT,
            UPDATED_AT,
            EXTRACT(YEAR FROM CREATED_AT) AS CREATED_YEAR
        FROM USER_INFO
        ORDER BY CREATED_AT DESC
    </select>

    <!-- 삭제 -->
    <delete id="deleteUser">
        DELETE FROM USER_INFO WHERE USER_ID = #{userId}
    </delete>



</mapper>

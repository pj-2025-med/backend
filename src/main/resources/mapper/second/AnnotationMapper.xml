<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.med.mapper.second.AnnotationMapper">

    <select id="findAnnotations" resultType="com.example.med.dto.AnnotationDto">
        SELECT
            anno_image_id,
            study_key,
            series_key,
            image_key,
            frame_no,
            annotations,
            created_by,
            TO_CHAR(created_at, 'YYYY-MM-DD HH24:MI:SS') AS createdAt
        FROM ANNO_IMAGE_JSON
        WHERE
            study_key = #{studyKey}
            AND series_key = #{seriesKey}
            AND image_key = #{imageKey}
            <if test="frameNo != null">
                AND frame_no = #{frameNo}
            </if>
    </select>

    <update id="upsertAnnotations" parameterType="com.example.med.dto.logDto.AnnoDto"
            statementType="CALLABLE">
  <![CDATA[
        DECLARE
        v_frame_no   NUMBER := NVL(#{frameNo,jdbcType=NUMERIC}, -1);
        v_id         NUMBER;
      v_created_at TIMESTAMP;
        BEGIN
      -- 1) 먼저 UPDATE 시도
        UPDATE ANNO_IMAGE_JSON
        SET annotations = #{annotations, jdbcType=CLOB}
        WHERE study_key = #{studyKey, jdbcType=NUMERIC}
          AND series_key = #{seriesKey, jdbcType=NUMERIC}
          AND image_key  = #{imageKey, jdbcType=NUMERIC}
          AND frame_no   = v_frame_no;

        IF SQL%ROWCOUNT = 0 THEN
        -- 2) 없으면 INSERT + RETURNING
        INSERT INTO ANNO_IMAGE_JSON
          (study_key, series_key, image_key, frame_no,
           annotations, created_by, created_at)
        VALUES
          (#{studyKey, jdbcType=NUMERIC},
        #{seriesKey, jdbcType=NUMERIC},
        #{imageKey,  jdbcType=NUMERIC},
        v_frame_no,
        #{annotations, jdbcType=CLOB},
        #{createdBy,  jdbcType=VARCHAR},
        SYSTIMESTAMP)
        RETURNING anno_image_id, created_at
        INTO v_id, v_created_at;
        ELSE
        -- 3) 업데이트였다면 기존 PK, CREATED_AT 조회
        SELECT anno_image_id, created_at
        INTO v_id, v_created_at
        FROM ANNO_IMAGE_JSON
        WHERE study_key = #{studyKey, jdbcType=NUMERIC}
          AND series_key = #{seriesKey, jdbcType=NUMERIC}
          AND image_key  = #{imageKey, jdbcType=NUMERIC}
          AND frame_no   = v_frame_no;
        END IF;

      -- OUT 파라미터로 반환
        #{annoImageId, mode=OUT, jdbcType=NUMERIC} := v_id;
        #{createdAt,   mode=OUT, jdbcType=TIMESTAMP} := v_created_at;
        END;
        ]]>
</update>

</mapper>
